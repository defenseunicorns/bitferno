name: Update Fork

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  update-fork:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Fork
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          fetch-tags: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add Upstream Remote
        run: git remote add upstream https://github.com/bitnami/charts.git

      - name: Fetch Upstream
        run: git fetch upstream --no-tags

      - name: Merge Upstream Changes
        run: |
          git checkout main
          git merge -X ours upstream/main || echo "Merge failed, but continuing the workflow"

      - name: Run Modification Script
        run: |
          ./de-cringe.sh
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "chore: apply automated modifications"
          fi

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Login to GHCR with helm
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login -u ${{ github.actor }} --password-stdin ghcr.io

      - name: Package, Test, and Publish Charts in Order
        run: |
          chart_order=$(go run main.go)
          IFS=$'\n'
          for chart in ${chart_order}; do
            if [[ "${chart}" == "common" || "${chart}" == "kube-prometheus-crds" ]]; then
              echo "Skipping ${chart}"
              continue
            fi
            echo "Processing chart: ${chart}"

            # Test the chart by rendering templates
            if helm dependency update "bitnami/${chart}" --skip-refresh > /dev/null 2>&1 && helm template "bitnami/${chart}" --set global.imageRegistry=ghcr.io > /dev/null 2>&1; then
              echo "Test passed for ${chart}"
            else
              echo "Test failed for ${chart}"
              helm template "bitnami/${chart}" --set global.imageRegistry=ghcr.io
              exit 1
            fi

            helm package "bitnami/${chart}" -u -d charts

            helm push charts/${chart}-*.tgz oci://ghcr.io/defenseunicorns/bitferno
          done

      - name: Push Changes
        run: git push origin main
